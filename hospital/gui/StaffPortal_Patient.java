/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.gui;
import hospital.dbutil.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;

/**
 *
 * @author Hp
 */
public class StaffPortal_Patient extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form StaffPortal_Patient
     */
    public StaffPortal_Patient() {
        initComponents();
        //edit from here
        try
        {
        con = DBconnection.getConnection();
        int a;
        pst =con.prepareStatement("select * from patient1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) pattable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("pat_id"));
                v3.add(rs.getString("pat_fname"));
                v3.add(rs.getString("pat_lname"));
                v3.add(rs.getInt("pat_age"));
                v3.add(rs.getString("pat_bloodgrp"));
                v3.add(rs.getString("pat_gender"));
                v3.add(rs.getInt("pat_ph"));
                v3.add(rs.getString("pat_addr"));
                v3.add(rs.getString("pat_marital"));
                v3.add(rs.getString("pat_patype"));
                v3.add(rs.getString("pat_visitdate"));
                v3.add(rs.getString("pat_bedno"));
                v3.add(rs.getString("pat_visittime"));
                v3.add(rs.getString("pat_disease"));
                v3.add(rs.getString("pat_username"));
                v3.add(rs.getString("pat_password"));
                v3.add(rs.getString("pat_question"));
                v3.add(rs.getString("pat_answer"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbtngrp = new javax.swing.ButtonGroup();
        maritalbtngrp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fnametxt = new javax.swing.JTextField();
        agetxt = new javax.swing.JTextField();
        addrtxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lnametxt = new javax.swing.JTextField();
        phtxt = new javax.swing.JTextField();
        patypetxt = new javax.swing.JTextField();
        bednotxt = new javax.swing.JTextField();
        visitdatetxt = new javax.swing.JTextField();
        visittimetxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        diseasetxt = new javax.swing.JTextField();
        malerb = new javax.swing.JRadioButton();
        femalerb = new javax.swing.JRadioButton();
        otherrb = new javax.swing.JRadioButton();
        idtxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        searchbtn = new javax.swing.JButton();
        bloodgrptxt = new javax.swing.JTextField();
        singlerb = new javax.swing.JRadioButton();
        marriedrb = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pattable = new javax.swing.JTable();
        username = new javax.swing.JLabel();
        pass = new javax.swing.JLabel();
        passwordtxt = new javax.swing.JTextField();
        usernametxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        questiontxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        answertxt = new javax.swing.JTextField();
        lblfname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblbd = new javax.swing.JLabel();
        lblph = new javax.swing.JLabel();
        lbladr = new javax.swing.JLabel();
        lblptype = new javax.swing.JLabel();
        lblbno = new javax.swing.JLabel();
        lbldesc = new javax.swing.JLabel();
        lblpass = new javax.swing.JLabel();
        lblvdt = new javax.swing.JLabel();
        lblvtm = new javax.swing.JLabel();
        lbluname = new javax.swing.JLabel();
        lblans = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PATIENT DETAILS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Patient ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("First Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Last Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Age");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Gender");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 420, -1, -1));

        fnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnametxtKeyReleased(evt);
            }
        });
        jPanel1.add(fnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 150, -1));

        agetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                agetxtKeyReleased(evt);
            }
        });
        jPanel1.add(agetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 150, -1));

        addrtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addrtxtKeyReleased(evt);
            }
        });
        jPanel1.add(addrtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 510, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Blood Group");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Bed No");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Phone No");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Patient Type");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 460, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Marital Status");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Visiting Date");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Visiting Time");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, -1, -1));

        lnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnametxtActionPerformed(evt);
            }
        });
        lnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lnametxtKeyReleased(evt);
            }
        });
        jPanel1.add(lnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 160, -1));

        phtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phtxtKeyReleased(evt);
            }
        });
        jPanel1.add(phtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, 160, 30));

        patypetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patypetxtActionPerformed(evt);
            }
        });
        patypetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patypetxtKeyReleased(evt);
            }
        });
        jPanel1.add(patypetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 460, 160, -1));
        jPanel1.add(bednotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 500, 160, -1));

        visitdatetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitdatetxtActionPerformed(evt);
            }
        });
        visitdatetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                visitdatetxtKeyReleased(evt);
            }
        });
        jPanel1.add(visitdatetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, 150, -1));

        visittimetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                visittimetxtKeyReleased(evt);
            }
        });
        jPanel1.add(visittimetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 540, 150, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Discription");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 540, -1, -1));

        diseasetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diseasetxtActionPerformed(evt);
            }
        });
        diseasetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diseasetxtKeyReleased(evt);
            }
        });
        jPanel1.add(diseasetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, 160, -1));

        malerb.setBackground(new java.awt.Color(102, 0, 204));
        genderbtngrp.add(malerb);
        malerb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        malerb.setForeground(new java.awt.Color(255, 255, 255));
        malerb.setText("Male");
        jPanel1.add(malerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));

        femalerb.setBackground(new java.awt.Color(102, 0, 204));
        genderbtngrp.add(femalerb);
        femalerb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        femalerb.setForeground(new java.awt.Color(255, 255, 255));
        femalerb.setText("Female");
        jPanel1.add(femalerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, -1, -1));

        otherrb.setBackground(new java.awt.Color(102, 0, 204));
        genderbtngrp.add(otherrb);
        otherrb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        otherrb.setForeground(new java.awt.Color(255, 255, 255));
        otherrb.setText("Other");
        jPanel1.add(otherrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, -1, -1));
        jPanel1.add(idtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 270, 30));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/patient_transp_icon.png"))); // NOI18N
        jLabel21.setAutoscrolls(true);
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 130, 120));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addbtn.setForeground(new java.awt.Color(102, 0, 204));
        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon.png"))); // NOI18N
        addbtn.setText("ADD");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(102, 0, 204));
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove_icon.png"))); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(102, 0, 204));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        updatebtn.setText("UPDATE");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home page.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        clearbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearbtn.setForeground(new java.awt.Color(255, 0, 255));
        clearbtn.setText("CLEAR");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(updatebtn)
                .addGap(105, 105, 105)
                .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addbtn)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1420, 70));

        searchbtn.setBackground(new java.awt.Color(102, 0, 255));
        searchbtn.setForeground(new java.awt.Color(204, 0, 255));
        searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, -1, 40));

        bloodgrptxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bloodgrptxtKeyReleased(evt);
            }
        });
        jPanel1.add(bloodgrptxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 320, 160, 30));

        singlerb.setBackground(new java.awt.Color(102, 0, 255));
        maritalbtngrp.add(singlerb);
        singlerb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        singlerb.setForeground(new java.awt.Color(255, 255, 255));
        singlerb.setText("Single");
        jPanel1.add(singlerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 460, -1, -1));

        marriedrb.setBackground(new java.awt.Color(102, 0, 255));
        maritalbtngrp.add(marriedrb);
        marriedrb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        marriedrb.setForeground(new java.awt.Color(255, 255, 255));
        marriedrb.setText("Married");
        jPanel1.add(marriedrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, -1, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        pattable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "fname", "lname", "age", "bloodgrp", "gender", "ph no", "addr", "marital", "pattype", "visit date", "bedno", "visit time", "disease", "username", "password", "Question", "Answer"
            }
        ));
        pattable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        pattable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pattableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pattable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 160, 660, 540));

        username.setBackground(new java.awt.Color(255, 255, 255));
        username.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setText("Username");
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 580, -1, -1));

        pass.setBackground(new java.awt.Color(255, 255, 255));
        pass.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pass.setForeground(new java.awt.Color(255, 255, 255));
        pass.setText("Password");
        jPanel1.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 580, -1, -1));

        passwordtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordtxtKeyReleased(evt);
            }
        });
        jPanel1.add(passwordtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 580, 160, -1));

        usernametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernametxtKeyReleased(evt);
            }
        });
        jPanel1.add(usernametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 580, 150, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Security Question :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 620, -1, -1));

        questiontxt.setBackground(new java.awt.Color(153, 0, 204));
        questiontxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        questiontxt.setForeground(new java.awt.Color(255, 255, 255));
        questiontxt.setText("Your Favourite Destination ?");
        questiontxt.setBorder(null);
        jPanel1.add(questiontxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 620, 270, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Answer :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 650, -1, -1));

        answertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answertxtKeyReleased(evt);
            }
        });
        jPanel1.add(answertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 650, 170, -1));

        lblfname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblfname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 130, 20));

        lblage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblage.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblage, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 130, 20));

        lbllname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbllname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbllname, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 300, 140, 20));

        lblbd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblbd.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblbd, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 120, 20));

        lblph.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblph.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblph, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, 130, 20));

        lbladr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbladr.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbladr, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, 180, 20));

        lblptype.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblptype.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblptype, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, 140, 20));

        lblbno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblbno.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblbno, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, 130, 20));

        lbldesc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbldesc.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbldesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 560, 130, 20));

        lblpass.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblpass.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 600, 130, 20));

        lblvdt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblvdt.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblvdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 520, 130, 20));

        lblvtm.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblvtm.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblvtm, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 540, 110, 30));

        lbluname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbluname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbluname, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 600, 140, 20));

        lblans.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblans.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblans, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 650, 120, 20));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1440,720_bg.jpg"))); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 720));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patypetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patypetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patypetxtActionPerformed

    private void visitdatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitdatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitdatetxtActionPerformed

    private void diseasetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diseasetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diseasetxtActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        
        String id = idtxt.getText();
        String fname=fnametxt.getText();
        String lname=lnametxt.getText();
        int age=Integer.parseInt(agetxt.getText());
        String bloodgrp=bloodgrptxt.getText();
        String marital="";
        String gender="";
        if(malerb.isSelected()==true)
        {
            gender = "Male";
        }
        else if(femalerb.isSelected()==true)
        {
            gender = "Female";
        }
        else
        {
            gender = "Other";
        }
        
        if(singlerb.isSelected()==true)
        {
            marital = "Single";
        }
        else
        {
            marital = "Married";
        }
        
        int phone=Integer.parseInt(phtxt.getText());
        String addr=addrtxt.getText();
        
        String patype=patypetxt.getText();
        String visitdate=visitdatetxt.getText();
        String bedno=bednotxt.getText();
        String visittime=visittimetxt.getText();
        String disease=diseasetxt.getText();
        String username=usernametxt.getText();
        String password=passwordtxt.getText();
        String question=questiontxt.getText();
        String answer=answertxt.getText();
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("insert into patient1(pat_id,pat_fname,pat_lname,pat_age,pat_bloodgrp,pat_gender,pat_ph,pat_addr,pat_marital,pat_patype,pat_visitdate,pat_bedno,pat_visittime,pat_disease,pat_username,pat_password,pat_question,pat_answer)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
        pst.setString(1,id);
        pst.setString(2,fname);
        pst.setString(3,lname);
        pst.setInt(4,age);
        pst.setString(5,bloodgrp);
        pst.setString(6,gender);
        pst.setInt(7,phone);
        pst.setString(8,addr);
        pst.setString(9,marital);
        pst.setString(10,patype);
        pst.setString(11,visitdate);
        pst.setString(12,bedno);
        pst.setString(13,visittime);
        pst.setString(14,disease);
        pst.setString(15,username);
        pst.setString(16,password);
        pst.setString(17,question);
        pst.setString(18,answer);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"Patient Added");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        bednotxt.setText("");
        
        malerb.setSelected(true);
        
        //gendercb.setSelectedIndex(0);
        //genderbtngrp.setSelected(malerb, false);
        
        phtxt.setText("");
        addrtxt.setText("");
        singlerb.setSelected(true);
        
        patypetxt.setText("");
        visitdatetxt.setText("");
        visittimetxt.setText("");
        diseasetxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from patient1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) pattable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("pat_id"));
                v3.add(rs.getString("pat_fname"));
                v3.add(rs.getString("pat_lname"));
                v3.add(rs.getInt("pat_age"));
                v3.add(rs.getString("pat_bloodgrp"));
                v3.add(rs.getString("pat_gender"));
                v3.add(rs.getInt("pat_ph"));
                v3.add(rs.getString("pat_addr"));
                v3.add(rs.getString("pat_marital"));
                v3.add(rs.getString("pat_patype"));
                v3.add(rs.getString("pat_visitdate"));
                v3.add(rs.getString("pat_bedno"));
                v3.add(rs.getString("pat_visittime"));
                v3.add(rs.getString("pat_disease"));
                v3.add(rs.getString("pat_username"));
                v3.add(rs.getString("pat_password"));
                v3.add(rs.getString("pat_question"));
                v3.add(rs.getString("pat_answer"));
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_addbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        
        String id = idtxt.getText();
        con = DBconnection.getConnection();
        String sql = "delete from patient1 where pat_id=? ";
        pst=(PreparedStatement)con.prepareStatement(sql);
        //pst=con.prepareStatement(sql);
        pst.setString(1,id);
        pst.execute();
        JOptionPane.showMessageDialog(null,"Patient Deleted");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        addrtxt.setText("");
        singlerb.setSelected(true);
        phtxt.setText("");
        patypetxt.setText("");
        visitdatetxt.setText("");
        bednotxt.setText("");
        visittimetxt.setText("");
        diseasetxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from patient1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) pattable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("pat_id"));
                v3.add(rs.getString("pat_fname"));
                v3.add(rs.getString("pat_lname"));
                v3.add(rs.getInt("pat_age"));
                v3.add(rs.getString("pat_bloodgrp"));
                v3.add(rs.getString("pat_gender"));
                v3.add(rs.getInt("pat_ph"));
                v3.add(rs.getString("pat_addr"));
                v3.add(rs.getString("pat_marital"));
                v3.add(rs.getString("pat_patype"));
                v3.add(rs.getString("pat_visitdate"));
                v3.add(rs.getString("pat_bedno"));
                v3.add(rs.getString("pat_visittime"));
                v3.add(rs.getString("pat_disease"));
                v3.add(rs.getString("pat_username"));
                v3.add(rs.getString("pat_password"));
                v3.add(rs.getString("pat_question"));
                v3.add(rs.getString("pat_answer"));
            }
            df.addRow(v3);
        }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StaffPortal_Homepage sph = new StaffPortal_Homepage();
        sph.show();
        
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        addrtxt.setText("");
        singlerb.setSelected(true);
        phtxt.setText("");
        patypetxt.setText("");
        visitdatetxt.setText("");
        bednotxt.setText("");
        visittimetxt.setText("");
        diseasetxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
    }//GEN-LAST:event_clearbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        
        String id = idtxt.getText();
        String fname=fnametxt.getText();
        String lname=lnametxt.getText();
        int age=Integer.parseInt(agetxt.getText());
        String bloodgrp=bloodgrptxt.getText();
        String marital="";
        String gender="";
        if(malerb.isSelected()==true)
        {
            gender = "Male";
        }
        else if(femalerb.isSelected()==true)
        {
            gender = "Female";
        }
        else
        {
            gender = "Other";
        }
        
        if(singlerb.isSelected()==true)
        {
            marital = "Single";
        }
        else
        {
            marital = "Married";
        }
        
        int phone=Integer.parseInt(phtxt.getText());
        String addr=addrtxt.getText();
        
        String patype=patypetxt.getText();
        String visitdate=visitdatetxt.getText();
        String bedno=bednotxt.getText();
        String visittime=visittimetxt.getText();
        String disease=diseasetxt.getText();
        String username=usernametxt.getText();
        String password=passwordtxt.getText();
        String question=questiontxt.getText();
        String answer=answertxt.getText();
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("update patient1 set pat_fname=?,pat_lname=?,pat_age=?,pat_bloodgrp=?,pat_gender=?,pat_ph=?,pat_addr=?,pat_marital=?,pat_patype=?,pat_visitdate=?,pat_bedno=?,pat_visittime=?,pat_disease=?,pat_username=?,pat_password=?,pat_question=?,pat_answer=? where pat_id=?");
        //pst.setInt(17,id);
        pst.setString(1,fname);
        pst.setString(2,lname);
        pst.setInt(3,age);
        pst.setString(4,bloodgrp);
        pst.setString(5,gender);
        pst.setInt(6,phone);
        pst.setString(7,addr);
        pst.setString(8,marital);
        pst.setString(9,patype);
        pst.setString(10,visitdate);
        pst.setString(11,bedno);
        pst.setString(12,visittime);
        pst.setString(13,disease);
        pst.setString(14,username);
        pst.setString(15,password);
        pst.setString(16,question);
        pst.setString(17,answer);
        pst.setString(18,id);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"List Updated");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        addrtxt.setText("");
        singlerb.setSelected(true);
        phtxt.setText("");
        patypetxt.setText("");
        visitdatetxt.setText("");
        bednotxt.setText("");
        visittimetxt.setText("");
        diseasetxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from patient1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) pattable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("pat_id"));
                v3.add(rs.getString("pat_fname"));
                v3.add(rs.getString("pat_lname"));
                v3.add(rs.getInt("pat_age"));
                v3.add(rs.getString("pat_bloodgrp"));
                v3.add(rs.getString("pat_gender"));
                v3.add(rs.getInt("pat_ph"));
                v3.add(rs.getString("pat_addr"));
                v3.add(rs.getString("pat_marital"));
                v3.add(rs.getString("pat_patype"));
                v3.add(rs.getString("pat_visitdate"));
                v3.add(rs.getString("pat_bedno"));
                v3.add(rs.getString("pat_visittime"));
                v3.add(rs.getString("pat_disease"));
                v3.add(rs.getString("pat_username"));
                v3.add(rs.getString("pat_password"));
                v3.add(rs.getString("pat_question"));
                v3.add(rs.getString("pat_answer"));
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("select pat_id,pat_fname,pat_lname,pat_age,pat_bloodgrp,pat_gender,pat_ph,pat_addr,pat_marital,pat_patype,pat_visitdate,pat_bedno,pat_visittime,pat_disease,pat_username,pat_password,pat_question,pat_answer from patient1 where pat_id=? ");
        //int id=Integer.parseInt(idtxt.getText());
        String id=idtxt.getText();
        //pst.setInt(1, id);
        pst.setString(1,id);
        ResultSet rs1=pst.executeQuery();
        if(rs1.next()==false)
        {
        JOptionPane.showMessageDialog(this,"Sorry Record not found !");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        phtxt.setText("");
        addrtxt.setText("");
        patypetxt.setText("");
        visitdatetxt.setText("");
        bednotxt.setText("");
        visittimetxt.setText("");
        diseasetxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        malerb.setSelected(true);
        singlerb.setSelected(false);
        answertxt.setText("");
        }
        else
        {
        idtxt.setText(rs1.getString("pat_id"));
        fnametxt.setText(rs1.getString("pat_fname"));
        lnametxt.setText(rs1.getString("pat_lname"));
        agetxt.setText(rs1.getString("pat_age"));
        
       
       String sex = rs1.getString("pat_gender");
       if(sex.equals("Male"))
       {
           malerb.setSelected(true);
       }
       else if(sex.equals("Female"))
       {
           femalerb.setSelected(true);
       }
       else
       {
           otherrb.setSelected(true);
       }
       
        phtxt.setText(rs1.getString("pat_ph"));
        addrtxt.setText(rs1.getString("pat_addr"));
        
       String marriage = rs1.getString("pat_marital");
       if(marriage.equals("Single"))
       {
           singlerb.setSelected(true);
       }
       else
       {
           marriedrb.setSelected(true);
       }
       
        bloodgrptxt.setText(rs1.getString("pat_bloodgrp"));
        patypetxt.setText(rs1.getString("pat_patype"));
        visitdatetxt.setText(rs1.getString("pat_visitdate"));
        bednotxt.setText(rs1.getString("pat_bedno"));
        visittimetxt.setText(rs1.getString("pat_visittime"));
        diseasetxt.setText(rs1.getString("pat_disease"));
        usernametxt.setText(rs1.getString("pat_username"));
        passwordtxt.setText(rs1.getString("pat_password"));
        questiontxt.setText(rs1.getString("pat_question"));
        answertxt.setText(rs1.getString("pat_answer"));
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnActionPerformed

    private void pattableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pattableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) pattable.getModel();
        int s = pattable.getSelectedRow();
        idtxt.setText(df.getValueAt(s,0).toString());
        fnametxt.setText(df.getValueAt(s,1).toString());
        lnametxt.setText(df.getValueAt(s,2).toString());
        //int age = Integer.parseInt(df.getValueAt(s,3).toString());
        agetxt.setText(df.getValueAt(s,3).toString());//convrt to int pending
        bloodgrptxt.setText(df.getValueAt(s,4).toString());
        //gendertxt.setText(df.getValueAt(s,4).toString());
        //int phone = Integer.parseInt(df.getValueAt(s,6).toString());
        phtxt.setText(df.getValueAt(s,6).toString());//convrt to int pending
        addrtxt.setText(df.getValueAt(s,7).toString());
        //maritaltxt.setText(df.getValueAt(s,8).toString());
        patypetxt.setText(df.getValueAt(s,9).toString());
        visitdatetxt.setText(df.getValueAt(s,10).toString());
        bednotxt.setText(df.getValueAt(s,11).toString());
        visittimetxt.setText(df.getValueAt(s,12).toString());
        diseasetxt.setText(df.getValueAt(s,13).toString());
        usernametxt.setText(df.getValueAt(s,14).toString());
        passwordtxt.setText(df.getValueAt(s,15).toString());
        questiontxt.setText(df.getValueAt(s,16).toString());
        answertxt.setText(df.getValueAt(s,17).toString());
        
        String sex = df.getValueAt(s,5).toString();
        if(sex.equals("Male"))
       {
           malerb.setSelected(true);
       }
       else if(sex.equals("Female"))
       {
           femalerb.setSelected(true);
       }
        else
       {
           otherrb.setSelected(true);
       }
        
        String marital = df.getValueAt(s,8).toString();
        if(marital.equals("Single"))
       {
           singlerb.setSelected(true);
       }
        else
       {
           marriedrb.setSelected(true);
       }
    }//GEN-LAST:event_pattableMouseClicked

    private void fnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(fnametxt.getText());
        if(!match.matches()){
        lblfname.setText("Invalid fname!");
        }
        else
        {
        lblfname.setText(null);
        }
    }//GEN-LAST:event_fnametxtKeyReleased

    private void lnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnametxtActionPerformed

    private void lnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(lnametxt.getText());
        if(!match.matches()){
        lbllname.setText("Invalid lname!");
        }
        else
        {
        lbllname.setText(null);
        }
    }//GEN-LAST:event_lnametxtKeyReleased

    private void agetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9][0-9]$";               //"^([0]?[1-9]|[0-9]){2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(agetxt.getText());
        if(!match.matches()){
        lblage.setText("Invalid age!");
        }
        else
        {
        lblage.setText(null);
        }
    }//GEN-LAST:event_agetxtKeyReleased

    private void bloodgrptxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bloodgrptxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^(A|B|AB|O)[+-]$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(bloodgrptxt.getText());
        if(!match.matches()){
        lblbd.setText("Invalid blood grp!");
        }
        else
        {
        lblbd.setText(null);
        }
    }//GEN-LAST:event_bloodgrptxtKeyReleased

    private void phtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phtxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9]{10}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(phtxt.getText());
        if(!match.matches()){
        lblph.setText("Invalid phone no!");
        }
        else
        {
        lblph.setText(null);
        }
    }//GEN-LAST:event_phtxtKeyReleased

    private void addrtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrtxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z0-9 ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(addrtxt.getText());
        if(!match.matches()){
        lbladr.setText("Invalid address!");
        }
        else
        {
        lbladr.setText(null);
        }
    }//GEN-LAST:event_addrtxtKeyReleased

    private void patypetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patypetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z ]$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(patypetxt.getText());
        if(!match.matches()){
        lblptype.setText("Invalid type!");
        }
        else
        {
        lblptype.setText(null);
        }
    }//GEN-LAST:event_patypetxtKeyReleased

    private void visitdatetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visitdatetxtKeyReleased
        // TODO add your handling code here:
        /*String PATTERN="^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])([./-][20]([0-9]{2})$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(visitdatetxt.getText());
        if(!match.matches()){
        lblvdt.setText("Invalid Date!");
        }
        else
        {
        lblvdt.setText(null);
        }*/
    }//GEN-LAST:event_visitdatetxtKeyReleased

    private void visittimetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visittimetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^(1|2|3|4|5|6|7|8|9|10|11|12)(am|pm|Am|Pm)$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(visittimetxt.getText());
        if(!match.matches()){
        lblvtm.setText("Invalid Time!");
        }
        else
        {
        lblvtm.setText(null);
        }
    }//GEN-LAST:event_visittimetxtKeyReleased

    private void diseasetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diseasetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(diseasetxt.getText());
        if(!match.matches()){
        lbldesc.setText("Invalid data!");
        }
        else
        {
        lbldesc.setText(null);
        }
    }//GEN-LAST:event_diseasetxtKeyReleased

    private void usernametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(usernametxt.getText());
        if(!match.matches()){
        lbluname.setText("Invalid Username!");
        }
        else
        {
        lbluname.setText(null);
        }
    }//GEN-LAST:event_usernametxtKeyReleased

    private void passwordtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordtxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*(@)([0-9]){2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(passwordtxt.getText());
        if(!match.matches()){
        lblpass.setText("Invalid Password!");
        }
        else
        {
        lblpass.setText(null);
        }
    }//GEN-LAST:event_passwordtxtKeyReleased

    private void answertxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answertxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(answertxt.getText());
        if(!match.matches()){
        lblans.setText("Invalid Location!");
        }
        else
        {
        lblans.setText(null);
        }
    }//GEN-LAST:event_answertxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPortal_Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField addrtxt;
    private javax.swing.JTextField agetxt;
    private javax.swing.JTextField answertxt;
    private javax.swing.JTextField bednotxt;
    private javax.swing.JLabel bg;
    private javax.swing.JTextField bloodgrptxt;
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField diseasetxt;
    private javax.swing.JRadioButton femalerb;
    private javax.swing.JTextField fnametxt;
    private javax.swing.ButtonGroup genderbtngrp;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbladr;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblans;
    private javax.swing.JLabel lblbd;
    private javax.swing.JLabel lblbno;
    private javax.swing.JLabel lbldesc;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblpass;
    private javax.swing.JLabel lblph;
    private javax.swing.JLabel lblptype;
    private javax.swing.JLabel lbluname;
    private javax.swing.JLabel lblvdt;
    private javax.swing.JLabel lblvtm;
    private javax.swing.JTextField lnametxt;
    private javax.swing.JRadioButton malerb;
    private javax.swing.ButtonGroup maritalbtngrp;
    private javax.swing.JRadioButton marriedrb;
    private javax.swing.JRadioButton otherrb;
    private javax.swing.JLabel pass;
    private javax.swing.JTextField passwordtxt;
    private javax.swing.JTable pattable;
    private javax.swing.JTextField patypetxt;
    private javax.swing.JTextField phtxt;
    private javax.swing.JTextField questiontxt;
    private javax.swing.JButton searchbtn;
    private javax.swing.JRadioButton singlerb;
    private javax.swing.JButton updatebtn;
    private javax.swing.JLabel username;
    private javax.swing.JTextField usernametxt;
    private javax.swing.JTextField visitdatetxt;
    private javax.swing.JTextField visittimetxt;
    // End of variables declaration//GEN-END:variables
}
