/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.gui;

import hospital.dbutil.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class StaffPortal_Bed extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst,pst1;
    ResultSet rs;
    Statement st;
    
    
    
    /**
     * Creates new form StaffPortal_Bed
     */
    public StaffPortal_Bed() {
        initComponents();
        try
        {
        con = DBconnection.getConnection();
        int a;
        pst =con.prepareStatement("select * from bed1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) bedtable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("bed_no"));
                v3.add(rs.getString("bed_roomno"));
                v3.add(rs.getString("bed_category"));
                v3.add(rs.getString("bed_availablity"));
                v3.add(rs.getString("bed_patientid"));
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categorybtngrp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        patientidtxt = new javax.swing.JTextField();
        bednotxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        bedtable = new javax.swing.JTable();
        generalrb = new javax.swing.JRadioButton();
        privaterb = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        roomnotxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        availabilitytxt = new javax.swing.JTextField();
        clearbtn = new javax.swing.JButton();
        lblbno = new javax.swing.JLabel();
        lblrno = new javax.swing.JLabel();
        lblpid = new javax.swing.JLabel();
        lblavl = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Bed_icon.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 120));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addbtn.setForeground(new java.awt.Color(102, 0, 255));
        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon.png"))); // NOI18N
        addbtn.setText("ADD BED");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(102, 0, 255));
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove_icon.png"))); // NOI18N
        deletebtn.setText("REMOVE BED");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(102, 0, 255));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        updatebtn.setText("UPDATE BED");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home page.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(399, Short.MAX_VALUE)
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(deletebtn)
                .addGap(33, 33, 33)
                .addComponent(updatebtn)
                .addGap(225, 225, 225)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1420, 70));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BED DETAILS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Room No");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 370, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Bed No");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 330, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Category");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 460, -1, -1));

        patientidtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                patientidtxtFocusLost(evt);
            }
        });
        patientidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientidtxtKeyReleased(evt);
            }
        });
        jPanel1.add(patientidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 410, 160, 30));

        bednotxt.setToolTipText("");
        bednotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bednotxtKeyReleased(evt);
            }
        });
        jPanel1.add(bednotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 330, 160, 30));

        bedtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bed No", "Room No", "Category", "Availabilty", "Patient Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bedtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bedtableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bedtable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 830, -1));

        generalrb.setBackground(new java.awt.Color(204, 0, 255));
        categorybtngrp.add(generalrb);
        generalrb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        generalrb.setForeground(new java.awt.Color(255, 255, 255));
        generalrb.setText("General ward");
        jPanel1.add(generalrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 460, -1, -1));

        privaterb.setBackground(new java.awt.Color(204, 0, 255));
        categorybtngrp.add(privaterb);
        privaterb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        privaterb.setForeground(new java.awt.Color(255, 255, 255));
        privaterb.setText("Private ward");
        jPanel1.add(privaterb, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 490, 120, -1));

        jLabel7.setBackground(new java.awt.Color(102, 0, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Patient id");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 410, -1, 20));

        roomnotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roomnotxtKeyReleased(evt);
            }
        });
        jPanel1.add(roomnotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 370, 160, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Availability");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 530, -1, -1));

        availabilitytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                availabilitytxtKeyReleased(evt);
            }
        });
        jPanel1.add(availabilitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 530, 160, 30));

        clearbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearbtn.setForeground(new java.awt.Color(153, 0, 204));
        clearbtn.setText("CLEAR");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 170, 120, 50));

        lblbno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblbno.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblbno, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 330, 120, 30));

        lblrno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblrno.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblrno, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 370, 120, 30));

        lblpid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblpid.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblpid, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 410, 120, 30));

        lblavl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblavl.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblavl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 534, 100, 20));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1440,720_bg.jpg"))); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        try
        {      
        String bedno= bednotxt.getText();
        String roomno=roomnotxt.getText();
        String patientid=patientidtxt.getText();
        
        String availability=availabilitytxt.getText();
        String category="";
        if(generalrb.isSelected()==true)
        {
            category = "General";
        }
        else
        {
            category = "Private";
        }
        
        
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("insert into bed1(bed_no,bed_roomno,bed_category,bed_availablity,bed_patientid)values(?,?,?,?,?)");
        pst.setString(1,bedno);
        pst.setString(2,roomno);
        pst.setString(3,category);
        pst.setString(4,availability);
        pst.setString(5,patientid);
        pst.executeUpdate();
        
        
        ////////trying for updating bed no patient
        con = DBconnection.getConnection();
        pst1=(PreparedStatement)con.prepareStatement("update patient1 set pat_bedno=? where pat_id=?");
        pst1.setString(1,bedno);
        pst1.setString(2,patientid);
        pst1.executeUpdate();
        JOptionPane.showMessageDialog(null,"Bed Added !!");
        //////////////////////////////////
        
        bednotxt.setText("");
        roomnotxt.setText("");
        availabilitytxt.setText("");
        patientidtxt.setText("");
        generalrb.setSelected(true);
        
        ///////displaying in jtable code
        int a;
        pst =con.prepareStatement("select * from bed1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) bedtable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v2=new Vector();
            for(int i=1;i<=a;i++)
            {
                v2.add(rs.getString("bed_no"));
                v2.add(rs.getString("bed_roomno"));
                v2.add(rs.getString("bed_category"));
                v2.add(rs.getString("bed_availablity"));
                v2.add(rs.getString("bed_patientid"));
            }
            df.addRow(v2);
        }
        //UPDATE PART
        bedno= bednotxt.getText();
        patientid= patientidtxt.getText();
        pst=(PreparedStatement)con.prepareStatement("update patient1 set pat_bedno=? where patient1.pat_id=?");//("update patient1 set p.pat_bedno=b.bedno from patient1 p JOIN bed1 b on p.pat_id=b.bed_patientid where p.pat_id=?");
        pst.setString(1,bedno);
        pst.setString(2,patientid);
        
        pst.executeUpdate();
        //JOptionPane.showMessageDialog(null,"List Updated");
        bednotxt.setText("");
        roomnotxt.setText("");
        availabilitytxt.setText("");
        patientidtxt.setText("");
        generalrb.setSelected(true);
        
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_addbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        String patientid=patientidtxt.getText();
        String bedno = bednotxt.getText();
        con = DBconnection.getConnection();
        String sql = "delete from bed1 where bed_no=? ";
        pst=(PreparedStatement)con.prepareStatement(sql);
        
        pst.setString(1,bedno);
        pst.execute();
        
        ////////trying for updating bed no patient
        
        String avail = "No";
        con = DBconnection.getConnection();
        pst1=(PreparedStatement)con.prepareStatement("update patient1 set pat_bedno=? where pat_id=?");
        pst1.setString(1,avail);
        pst1.setString(2,patientid);
        pst1.executeUpdate();
        
        //////////////////////////////////
        
        JOptionPane.showMessageDialog(null,"Bed Deleted");
        bednotxt.setText("");
        roomnotxt.setText("");
        availabilitytxt.setText("");
        patientidtxt.setText("");
        generalrb.setSelected(true);
        
        int a;
        pst =con.prepareStatement("select * from bed1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) bedtable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v2=new Vector();
            for(int i=1;i<=a;i++)
            {
                v2.add(rs.getString("bed_no"));
                v2.add(rs.getString("bed_roomno"));
                v2.add(rs.getString("bed_category"));
                v2.add(rs.getString("bed_availablity"));
                v2.add(rs.getString("bed_patientid"));
            }
            df.addRow(v2);
        }
        
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StaffPortal_Homepage sph = new StaffPortal_Homepage();
        sph.show();
        
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        
        String bedno= bednotxt.getText();
        String roomno=roomnotxt.getText();
        String patientid=patientidtxt.getText();
        
        String availability=availabilitytxt.getText();
        String category="";
        if(generalrb.isSelected()==true)
        {
            category = "General";
        }
        else
        {
            category = "Private";
        }
        
        
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("update bed1 set bed_roomno=?,bed_category=?,bed_availablity=?,bed_patientid=? where bed_no=?");
        
        pst.setString(1,roomno);
        pst.setString(2,category);
        pst.setString(3,availability);
        pst.setString(4,patientid);
        pst.setString(5,bedno);
        
        
        pst.executeUpdate();
        
        ////////trying for updating bed no patient
        con = DBconnection.getConnection();
        pst1=(PreparedStatement)con.prepareStatement("update patient1 set pat_bedno=? where pat_id=?");
        pst1.setString(1,bedno);
        pst1.setString(2,patientid);
        pst1.executeUpdate();
        
        //////////////////////////////////
        
        JOptionPane.showMessageDialog(null,"List Updated");
        bednotxt.setText("");
        roomnotxt.setText("");
        generalrb.setSelected(true);
        availabilitytxt.setText("");
        patientidtxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from bed1");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) bedtable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v2=new Vector();
            for(int i=1;i<=a;i++)
            {
                v2.add(rs.getString("bed_no"));
                v2.add(rs.getString("bed_roomno"));
                v2.add(rs.getString("bed_category"));
                v2.add(rs.getString("bed_availablity"));
                v2.add(rs.getString("bed_patientid"));
            }
            df.addRow(v2);
        }
        //UPDATE
        bedno= bednotxt.getText();
        patientid= patientidtxt.getText();
        pst=(PreparedStatement)con.prepareStatement("update patient1 set pat_bedno=? where patient1.pat_id=?");//("update patient1 set p.pat_bedno=b.bedno from patient1 p JOIN bed1 b on p.pat_id=b.bed_patientid where p.pat_id=?");
        pst.setString(1,bedno);
        pst.setString(2,patientid);
        
        pst.executeUpdate();
        //JOptionPane.showMessageDialog(null,"List Updated");
        bednotxt.setText("");
        roomnotxt.setText("");
        availabilitytxt.setText("");
        patientidtxt.setText("");
        generalrb.setSelected(true);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
        
    }//GEN-LAST:event_updatebtnActionPerformed

    private void bedtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bedtableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) bedtable.getModel();
        int s = bedtable.getSelectedRow();
        bednotxt.setText(df.getValueAt(s,0).toString());
        roomnotxt.setText(df.getValueAt(s,1).toString());
        patientidtxt.setText(df.getValueAt(s,4).toString());
        
        String category = df.getValueAt(s,2).toString();
        if(category.equals("General"))
       {
           generalrb.setSelected(true);
       }
       else if(category.equals("Private"))
       {
           privaterb.setSelected(true);
       }
        availabilitytxt.setText(df.getValueAt(s,3).toString());
    }//GEN-LAST:event_bedtableMouseClicked

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        bednotxt.setText("");
        roomnotxt.setText("");
        generalrb.setSelected(true);
        availabilitytxt.setText("");
        patientidtxt.setText("");
    }//GEN-LAST:event_clearbtnActionPerformed

    private void patientidtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientidtxtFocusLost
        // TODO add your handling code here:
        /*try
        {
        con = DBconnection.getConnection();
        st = con.createStatement();
        //String sql1 = "select COUNT (bed_patientid) from bed1 where bed_patientid = '"+patientidtxt+"'";
        rs = st.executeQuery("select COUNT (bed_patientid) from bed1 where bed_patientid = '"+patientidtxt+"' ");
        if(rs.next()==true)
        {
            JOptionPane.showMessageDialog(null, "Patient already added");
        }
        //int temp = Convert.ToInt32()
        
        
        }
        catch(Exception e)
            {
                e.printStackTrace();
            }*/
    }//GEN-LAST:event_patientidtxtFocusLost

    private void bednotxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bednotxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]([0-9]){3}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(bednotxt.getText());
        if(!match.matches()){
        lblbno.setText("Invalid Bed No!");
        }
        else
        {
        lblbno.setText(null);
        }
    }//GEN-LAST:event_bednotxtKeyReleased

    private void roomnotxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomnotxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^^[a-zA-Z]([0-9]){3}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(roomnotxt.getText());
        if(!match.matches()){
        lblrno.setText("Invalid Room No!");
        }
        else
        {
        lblrno.setText(null);
        }
    }//GEN-LAST:event_roomnotxtKeyReleased

    private void patientidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientidtxtKeyReleased
        // TODO add your handling code here:
        /*String PATTERN="^[a-zA-Z0-9 ]$";               //"^([0]?[1-9]|[0-9]){2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(patientidtxt.getText());
        if(!match.matches()){
        lblpid.setText("Invalid Patient id!");
        }
        else
        {
        lblpid.setText(null);
        }*/
    }//GEN-LAST:event_patientidtxtKeyReleased

    private void availabilitytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_availabilitytxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(availabilitytxt.getText());
        if(!match.matches()){
        lblavl.setText("Invalid lname!");
        }
        else
        {
        lblavl.setText(null);
        }
    }//GEN-LAST:event_availabilitytxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Bed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Bed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Bed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Bed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPortal_Bed().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField availabilitytxt;
    private javax.swing.JTextField bednotxt;
    private javax.swing.JTable bedtable;
    private javax.swing.JLabel bg;
    private javax.swing.ButtonGroup categorybtngrp;
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JRadioButton generalrb;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblavl;
    private javax.swing.JLabel lblbno;
    private javax.swing.JLabel lblpid;
    private javax.swing.JLabel lblrno;
    private javax.swing.JTextField patientidtxt;
    private javax.swing.JRadioButton privaterb;
    private javax.swing.JTextField roomnotxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
