/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.gui;
import hospital.dbutil.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class StaffPortal_Doctor extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    /**
     * Creates new form StaffPortal_Doctor
     */
    public StaffPortal_Doctor() {
        initComponents();
        
        try
        {
        con = DBconnection.getConnection();
        int a;
        pst =con.prepareStatement("select * from doctor");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) doctable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("doc_id"));
                v3.add(rs.getString("doc_fname"));
                v3.add(rs.getString("doc_lname"));
                v3.add(rs.getInt("doc_age"));
                v3.add(rs.getString("doc_bloodgrp"));
                v3.add(rs.getString("doc_gender"));
                v3.add(rs.getString("doc_dept"));
                v3.add(rs.getString("doc_addr"));
                v3.add(rs.getString("doc_marital"));
                //v3.add(rs.getString("doc_ph"));
                v3.add(rs.getInt("doc_ph"));
                v3.add(rs.getString("doc_city"));
                v3.add(rs.getString("doc_joindate"));
                v3.add(rs.getString("doc_leavedate"));
                v3.add(rs.getString("doc_visittime"));
                v3.add(rs.getString("doc_days"));
                v3.add(rs.getString("doc_username"));
                v3.add(rs.getString("doc_password"));
                v3.add(rs.getString("doc_question"));
                v3.add(rs.getString("doc_answer"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbtngrp = new javax.swing.ButtonGroup();
        maritalbtngrp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fnametxt = new javax.swing.JTextField();
        agetxt = new javax.swing.JTextField();
        addrtxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lnametxt = new javax.swing.JTextField();
        depttxt = new javax.swing.JTextField();
        citytxt = new javax.swing.JTextField();
        leavedatetxt = new javax.swing.JTextField();
        joindatetxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        usernametxt = new javax.swing.JTextField();
        passwordtxt = new javax.swing.JTextField();
        idtxt = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        malerb = new javax.swing.JRadioButton();
        femalerb = new javax.swing.JRadioButton();
        otherrb = new javax.swing.JRadioButton();
        bloodgrptxt = new javax.swing.JTextField();
        singlerb = new javax.swing.JRadioButton();
        marriedrb = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctable = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        answertxt = new javax.swing.JTextField();
        daystxt = new javax.swing.JTextField();
        visittimetxt = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        questiontxt = new javax.swing.JTextField();
        lblfname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lblbd = new javax.swing.JLabel();
        lblph = new javax.swing.JLabel();
        lbladr = new javax.swing.JLabel();
        lbldept = new javax.swing.JLabel();
        lblvtm = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        lblcity = new javax.swing.JLabel();
        lbluname = new javax.swing.JLabel();
        lblpass = new javax.swing.JLabel();
        lblans = new javax.swing.JLabel();
        phtxt = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/transp_doc_icon.png"))); // NOI18N
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 120));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addbtn.setForeground(new java.awt.Color(102, 0, 255));
        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_icon.png"))); // NOI18N
        addbtn.setText("ADD");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(102, 0, 255));
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove_icon.png"))); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(102, 0, 255));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_icon.png"))); // NOI18N
        updatebtn.setText("UPDATE");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home page.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        clearbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearbtn.setForeground(new java.awt.Color(255, 0, 255));
        clearbtn.setText("CLEAR");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(updatebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1420, 70));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DOCTOR DETAILS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Doctor ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("First Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Last Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Age");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Gender");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        fnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnametxtActionPerformed(evt);
            }
        });
        fnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnametxtKeyReleased(evt);
            }
        });
        jPanel1.add(fnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 150, -1));

        agetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                agetxtKeyReleased(evt);
            }
        });
        jPanel1.add(agetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 150, -1));

        addrtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addrtxtKeyReleased(evt);
            }
        });
        jPanel1.add(addrtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 480, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Blood Group");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Department");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Phone No.");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("City");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Marital Status");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Joining Date");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Leaving Date");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Visiting Time");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, -1));

        lnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lnametxtKeyReleased(evt);
            }
        });
        jPanel1.add(lnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 160, -1));

        depttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                depttxtKeyReleased(evt);
            }
        });
        jPanel1.add(depttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 160, -1));

        citytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                citytxtKeyReleased(evt);
            }
        });
        jPanel1.add(citytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, 160, -1));
        jPanel1.add(leavedatetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 160, -1));

        joindatetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joindatetxtActionPerformed(evt);
            }
        });
        jPanel1.add(joindatetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, 150, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Days");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, -1, -1));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Username");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, -1, -1));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Password");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 560, -1, -1));

        usernametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernametxtKeyReleased(evt);
            }
        });
        jPanel1.add(usernametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 560, 150, 30));

        passwordtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordtxtKeyReleased(evt);
            }
        });
        jPanel1.add(passwordtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 560, 160, 30));
        jPanel1.add(idtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 270, 30));

        searchbtn.setBackground(new java.awt.Color(102, 0, 255));
        searchbtn.setForeground(new java.awt.Color(204, 0, 255));
        searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 60, 40));

        malerb.setBackground(new java.awt.Color(102, 0, 255));
        genderbtngrp.add(malerb);
        malerb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        malerb.setForeground(new java.awt.Color(255, 255, 255));
        malerb.setText("Male");
        malerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malerbActionPerformed(evt);
            }
        });
        jPanel1.add(malerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 60, -1));

        femalerb.setBackground(new java.awt.Color(102, 0, 255));
        genderbtngrp.add(femalerb);
        femalerb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        femalerb.setForeground(new java.awt.Color(255, 255, 255));
        femalerb.setText("Female");
        femalerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femalerbActionPerformed(evt);
            }
        });
        jPanel1.add(femalerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 70, -1));

        otherrb.setBackground(new java.awt.Color(102, 0, 255));
        genderbtngrp.add(otherrb);
        otherrb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        otherrb.setForeground(new java.awt.Color(255, 255, 255));
        otherrb.setText("Other");
        otherrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherrbActionPerformed(evt);
            }
        });
        jPanel1.add(otherrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, -1, -1));

        bloodgrptxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bloodgrptxtKeyReleased(evt);
            }
        });
        jPanel1.add(bloodgrptxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 160, 30));

        singlerb.setBackground(new java.awt.Color(102, 0, 255));
        maritalbtngrp.add(singlerb);
        singlerb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        singlerb.setForeground(new java.awt.Color(255, 255, 255));
        singlerb.setText("Single");
        jPanel1.add(singlerb, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, -1, -1));

        marriedrb.setBackground(new java.awt.Color(102, 0, 255));
        maritalbtngrp.add(marriedrb);
        marriedrb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        marriedrb.setForeground(new java.awt.Color(255, 255, 255));
        marriedrb.setText("Married");
        jPanel1.add(marriedrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, -1, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        doctable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "fname", "lname", "age", "bloodgrp", "gender", "dept", "addr", "marital", "ph no", "city", "join date", "leave date", "visit time", "days", "username", "password", "question", "answer"
            }
        ));
        doctable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        doctable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doctableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(doctable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 180, 700, 490));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Records :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 150, 120, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Answer");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 650, -1, -1));

        answertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answertxtKeyReleased(evt);
            }
        });
        jPanel1.add(answertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 650, 160, -1));

        daystxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                daystxtKeyReleased(evt);
            }
        });
        jPanel1.add(daystxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 520, 150, -1));

        visittimetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                visittimetxtKeyReleased(evt);
            }
        });
        jPanel1.add(visittimetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 150, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Security Question : ");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 610, -1, -1));

        questiontxt.setBackground(new java.awt.Color(153, 0, 255));
        questiontxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        questiontxt.setForeground(new java.awt.Color(255, 255, 255));
        questiontxt.setText("What's your Favourite Destination ?");
        questiontxt.setBorder(null);
        jPanel1.add(questiontxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 610, 340, -1));

        lblfname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblfname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 130, 20));

        lbllname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbllname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbllname, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 140, 30));

        lblage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblage.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblage, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 130, 30));

        lblbd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblbd.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblbd, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, 140, 30));

        lblph.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblph.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblph, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, 130, 20));

        lbladr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbladr.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbladr, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 190, 20));

        lbldept.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbldept.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbldept, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 120, 20));

        lblvtm.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblvtm.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblvtm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 490, 110, 20));

        lblday.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblday.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblday, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 520, 80, 20));

        lblcity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblcity.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 110, 20));

        lbluname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbluname.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lbluname, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 590, 140, 20));

        lblpass.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblpass.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 590, 130, 20));

        lblans.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblans.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblans, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 650, 130, 20));
        jPanel1.add(phtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 420, 160, -1));

        bg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bg.setForeground(new java.awt.Color(255, 255, 255));
        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1440,720_bg.jpg"))); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -150, 1420, 970));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        //int id=Integer.parseInt(idtxt.getText());
        String id = idtxt.getText();
        con = DBconnection.getConnection();
        String sql = "delete from doctor where doc_id=? ";
        pst=(PreparedStatement)con.prepareStatement(sql);
        //pst=con.prepareStatement(sql);
        //pst.setInt(1,id);
        pst.setString(1,id);
        pst.execute();
        JOptionPane.showMessageDialog(null,"Doctor Deleted");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        depttxt.setText("");
        addrtxt.setText("");
        singlerb.setSelected(true);
        phtxt.setText("");
        citytxt.setText("");
        joindatetxt.setText("");
        leavedatetxt.setText("");
        visittimetxt.setText("");
        daystxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from doctor");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) doctable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("doc_id"));
                v3.add(rs.getString("doc_fname"));
                v3.add(rs.getString("doc_lname"));
                v3.add(rs.getInt("doc_age"));
                v3.add(rs.getString("doc_bloodgrp"));
                v3.add(rs.getString("doc_gender"));
                v3.add(rs.getString("doc_dept"));
                v3.add(rs.getString("doc_addr"));
                v3.add(rs.getString("doc_marital"));
                //v3.add(rs.getString("doc_ph"));
                v3.add(rs.getInt("doc_ph"));
                v3.add(rs.getString("doc_city"));
                v3.add(rs.getString("doc_joindate"));
                v3.add(rs.getString("doc_leavedate"));
                v3.add(rs.getString("doc_visittime"));
                v3.add(rs.getString("doc_days"));
                v3.add(rs.getString("doc_username"));
                v3.add(rs.getString("doc_password"));
                v3.add(rs.getString("doc_question"));
                v3.add(rs.getString("doc_answer"));
                
            }
            df.addRow(v3);
        }
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void joindatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joindatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_joindatetxtActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        //int id=Integer.parseInt(idtxt.getText());
        String id = idtxt.getText();
        String fname=fnametxt.getText();
        String lname=lnametxt.getText();
        int age=Integer.parseInt(agetxt.getText());
        String bloodgrp=bloodgrptxt.getText();
        
        
        String marital="";
        String gender="";
        if(malerb.isSelected()==true)
        {
            gender = "Male";
        }
        else if(femalerb.isSelected()==true)
        {
            gender = "Female";
        }
        else
        {
            gender = "Other";
        }
        
        if(singlerb.isSelected()==true)
        {
            marital = "Single";
        }
        else
        {
            marital = "Married";
        }
        
        String dept=depttxt.getText();
        String addr=addrtxt.getText();
        //String phone=phtxt.getText();
        int phone=Integer.parseInt(phtxt.getText());
        String city=citytxt.getText();
        String joindate=joindatetxt.getText();
        String leavedate=leavedatetxt.getText();
        String visittime=visittimetxt.getText();
        String days=daystxt.getText();
        String username=usernametxt.getText();
        String password=passwordtxt.getText();
        String question=questiontxt.getText();
        String answer=answertxt.getText();
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("insert into doctor(doc_id,doc_fname,doc_lname,doc_age,doc_bloodgrp,doc_gender,doc_dept,doc_addr,doc_marital,doc_ph,doc_city,doc_joindate,doc_leavedate,doc_visittime,doc_days,doc_username,doc_password,doc_question,doc_answer)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
        //pst.setInt(1,id);
        pst.setString(1,id);
        pst.setString(2,fname);
        pst.setString(3,lname);
        pst.setInt(4,age);
        pst.setString(5,bloodgrp);
        pst.setString(6,gender);
        pst.setString(7,dept);
        pst.setString(8,addr);
        pst.setString(9,marital);
        //pst.setString(10,phone);
        pst.setInt(10,phone);
        pst.setString(11,city);
        pst.setString(12,joindate);
        pst.setString(13,leavedate);
        pst.setString(14,visittime);
        pst.setString(15,days);
        pst.setString(16,username);
        pst.setString(17,password);
        pst.setString(18,question);
        pst.setString(19,answer);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"Doctor Added");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        depttxt.setText("");
        addrtxt.setText("");
        singlerb.setSelected(true);
        phtxt.setText("");
        citytxt.setText("");
        joindatetxt.setText("");
        leavedatetxt.setText("");
        visittimetxt.setText("");
        daystxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from doctor");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) doctable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("doc_id"));
                v3.add(rs.getString("doc_fname"));
                v3.add(rs.getString("doc_lname"));
                v3.add(rs.getInt("doc_age"));
                v3.add(rs.getString("doc_bloodgrp"));
                v3.add(rs.getString("doc_gender"));
                v3.add(rs.getString("doc_dept"));
                v3.add(rs.getString("doc_addr"));
                v3.add(rs.getString("doc_marital"));
                //v3.add(rs.getString("doc_ph"));
                v3.add(rs.getInt("doc_ph"));
                v3.add(rs.getString("doc_city"));
                v3.add(rs.getString("doc_joindate"));
                v3.add(rs.getString("doc_leavedate"));
                v3.add(rs.getString("doc_visittime"));
                v3.add(rs.getString("doc_days"));
                v3.add(rs.getString("doc_username"));
                v3.add(rs.getString("doc_password"));
                v3.add(rs.getString("doc_question"));
                v3.add(rs.getString("doc_answer"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_addbtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StaffPortal_Homepage sph = new StaffPortal_Homepage();
        sph.show();
        
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        
        try
        {
         //int id=Integer.parseInt(idtxt.getText());
        String id = idtxt.getText();
        String fname=fnametxt.getText();
        String lname=lnametxt.getText();
        int age=Integer.parseInt(agetxt.getText());
        String bloodgrp=bloodgrptxt.getText();
        String marital="";
        String gender="";
        if(malerb.isSelected()==true)
        {
            gender = "Male";
        }
        else if(femalerb.isSelected()==true)
        {
            gender = "Female";
        }
        else
        {
            gender = "Other";
        }
        
        if(singlerb.isSelected()==true)
        {
            marital = "Single";
        }
        else
        {
            marital = "Married";
        }
        
        String dept=depttxt.getText();
        String addr=addrtxt.getText();
        //String phone=phtxt.getText();
        int phone=Integer.parseInt(phtxt.getText());
        String city=citytxt.getText();
        String joindate=joindatetxt.getText();
        String leavedate=leavedatetxt.getText();
        String visittime=visittimetxt.getText();
        String days=daystxt.getText();
        String username=usernametxt.getText();
        String password=passwordtxt.getText();
        String question=questiontxt.getText();
        String answer=answertxt.getText();
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("update doctor set doc_fname=?,doc_lname=?,doc_age=?,doc_bloodgrp=?,doc_gender=?,doc_dept=?,doc_addr=?,doc_marital=?,doc_ph=?,doc_city=?,doc_joindate=?,doc_leavedate=?,doc_visittime=?,doc_days=?,doc_username=?,doc_password=?,doc_question=?,doc_answer=? where doc_id=?");
        //pst.setInt(17,id);
        pst.setString(1,fname);
        pst.setString(2,lname);
        pst.setInt(3,age);
        pst.setString(4,bloodgrp);
        pst.setString(5,gender);
        pst.setString(6,dept);
        pst.setString(7,addr);
        pst.setString(8,marital);
        pst.setInt(9,phone);
        pst.setString(10,city);
        pst.setString(11,joindate);
        pst.setString(12,leavedate);
        pst.setString(13,visittime);
        pst.setString(14,days);
        pst.setString(15,username);
        pst.setString(16,password);
        pst.setString(17,question);
        pst.setString(18,answer);
        //pst.setInt(19,id);
        pst.setString(19,id);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"List Updated");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        malerb.setSelected(true);
        
        singlerb.setSelected(true);
        

        depttxt.setText("");
        addrtxt.setText("");
        
        phtxt.setText("");
        citytxt.setText("");
        joindatetxt.setText("");
        leavedatetxt.setText("");
        visittimetxt.setText("");
        daystxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from doctor");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) doctable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("doc_id"));
                v3.add(rs.getString("doc_fname"));
                v3.add(rs.getString("doc_lname"));
                v3.add(rs.getInt("doc_age"));
                v3.add(rs.getString("doc_bloodgrp"));
                v3.add(rs.getString("doc_gender"));
                v3.add(rs.getString("doc_dept"));
                v3.add(rs.getString("doc_addr"));
                v3.add(rs.getString("doc_marital"));
                //v3.add(rs.getString("doc_ph"));
                v3.add(rs.getInt("doc_ph"));
                v3.add(rs.getString("doc_city"));
                v3.add(rs.getString("doc_joindate"));
                v3.add(rs.getString("doc_leavedate"));
                v3.add(rs.getString("doc_visittime"));
                v3.add(rs.getString("doc_days"));
                v3.add(rs.getString("doc_username"));
                v3.add(rs.getString("doc_password"));
                v3.add(rs.getString("doc_question"));
                v3.add(rs.getString("doc_answer"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("select doc_id,doc_fname,doc_lname,doc_age,doc_bloodgrp,doc_gender,doc_dept,doc_addr,doc_marital,doc_ph,doc_city,doc_joindate,doc_leavedate,doc_visittime,doc_days,doc_username,doc_password,doc_question,doc_answer from doctor where doc_id=? ");
        //int id=Integer.parseInt(idtxt.getText());
        String id = idtxt.getText();
        //pst.setInt(1, id);
        pst.setString(1, id);
        ResultSet rs1=pst.executeQuery();
        if(rs1.next()==false)
        {
        JOptionPane.showMessageDialog(this,"Sorry Record not found !");
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        depttxt.setText("");
        addrtxt.setText("");
        phtxt.setText("");
        citytxt.setText("");
        joindatetxt.setText("");
        leavedatetxt.setText("");
        visittimetxt.setText("");
        daystxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        malerb.setSelected(true);
        singlerb.setSelected(false);
        }
        else
        {
        idtxt.setText(rs1.getString("doc_id"));
        fnametxt.setText(rs1.getString("doc_fname"));
        lnametxt.setText(rs1.getString("doc_lname"));
        agetxt.setText(rs1.getString("doc_age"));
        
       
       String sex = rs1.getString("doc_gender");
       if(sex.equals("Male"))
       {
           malerb.setSelected(true);
       }
       else if(sex.equals("Female"))
       {
           femalerb.setSelected(true);
       }
       else
       {
           otherrb.setSelected(true);
       }
       
        depttxt.setText(rs1.getString("doc_dept"));
        addrtxt.setText(rs1.getString("doc_addr"));
        
       String marriage = rs1.getString("doc_marital");
       if(marriage.equals("Single"))
       {
           singlerb.setSelected(true);
       }
       else
       {
           marriedrb.setSelected(true);
       }
       
        bloodgrptxt.setText(rs1.getString("doc_bloodgrp"));
        phtxt.setText(rs1.getString("doc_ph"));
        citytxt.setText(rs1.getString("doc_city"));
        joindatetxt.setText(rs1.getString("doc_joindate"));
        leavedatetxt.setText(rs1.getString("doc_leavedate"));
        visittimetxt.setText(rs1.getString("doc_visittime"));
        daystxt.setText(rs1.getString("doc_days"));
        usernametxt.setText(rs1.getString("doc_username"));
        passwordtxt.setText(rs1.getString("doc_password"));
        questiontxt.setText(rs1.getString("doc_question"));
        answertxt.setText(rs1.getString("doc_answer"));
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnActionPerformed

    private void femalerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femalerbActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_femalerbActionPerformed

    private void malerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malerbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_malerbActionPerformed

    private void otherrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherrbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherrbActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        
        idtxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        agetxt.setText("");
        bloodgrptxt.setText("");
        depttxt.setText("");
        addrtxt.setText("");
        phtxt.setText("");
        citytxt.setText("");
        joindatetxt.setText("");
        leavedatetxt.setText("");
        visittimetxt.setText("");
        daystxt.setText("");
        usernametxt.setText("");
        passwordtxt.setText("");
        answertxt.setText("");
        
        malerb.setSelected(true);
        //femalerb.setSelected(true);
        singlerb.setSelected(true);
        //marriedrb.setSelected(false);
        //otherrb.setSelected(true);
        
    }//GEN-LAST:event_clearbtnActionPerformed

    private void fnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnametxtActionPerformed

    private void doctableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doctableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) doctable.getModel();
        int s = doctable.getSelectedRow();
        idtxt.setText(df.getValueAt(s,0).toString());
        fnametxt.setText(df.getValueAt(s,1).toString());
        lnametxt.setText(df.getValueAt(s,2).toString());
        agetxt.setText(df.getValueAt(s,3).toString());
        bloodgrptxt.setText(df.getValueAt(s,4).toString());
        //gendertxt.setText(df.getValueAt(s,5).toString());
        depttxt.setText(df.getValueAt(s,6).toString());
        addrtxt.setText(df.getValueAt(s,7).toString());
        //maritaltxt.setText(df.getValueAt(s,8).toString());
        phtxt.setText(df.getValueAt(s,9).toString());
        citytxt.setText(df.getValueAt(s,10).toString());
        joindatetxt.setText(df.getValueAt(s,11).toString());
        leavedatetxt.setText(df.getValueAt(s,12).toString());
        visittimetxt.setText(df.getValueAt(s,13).toString());
        daystxt.setText(df.getValueAt(s,14).toString());
        usernametxt.setText(df.getValueAt(s,15).toString());
        passwordtxt.setText(df.getValueAt(s,16).toString());
        questiontxt.setText(df.getValueAt(s,17).toString());
        answertxt.setText(df.getValueAt(s,18).toString());
        
        
        String sex = df.getValueAt(s,5).toString();
        if(sex.equals("Male"))
       {
           malerb.setSelected(true);
       }
       else if(sex.equals("Female"))
       {
           femalerb.setSelected(true);
       }
        else
       {
           otherrb.setSelected(true);
       }
        
        String marital = df.getValueAt(s,8).toString();
        if(marital.equals("Single"))
       {
           singlerb.setSelected(true);
       }
        else
       {
           marriedrb.setSelected(true);
       }
    }//GEN-LAST:event_doctableMouseClicked

    private void fnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(fnametxt.getText());
        if(!match.matches()){
        lblfname.setText("Invalid fname!");
        }
        else
        {
        lblfname.setText(null);
        }
    }//GEN-LAST:event_fnametxtKeyReleased

    private void lnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(lnametxt.getText());
        if(!match.matches()){
        lbllname.setText("Invalid lname!");
        }
        else
        {
        lbllname.setText(null);
        }
    }//GEN-LAST:event_lnametxtKeyReleased

    private void agetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9][0-9]$";               //"^([0]?[1-9]|[0-9]){2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(agetxt.getText());
        if(!match.matches()){
        lblage.setText("Invalid age!");
        }
        else
        {
        lblage.setText(null);
        }
    }//GEN-LAST:event_agetxtKeyReleased

    private void bloodgrptxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bloodgrptxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^(A|B|AB|O)[+-]$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(bloodgrptxt.getText());
        if(!match.matches()){
        lblbd.setText("Invalid blood grp!");
        }
        else
        {
        lblbd.setText(null);
        }
    }//GEN-LAST:event_bloodgrptxtKeyReleased

    private void addrtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrtxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z0-9 ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(addrtxt.getText());
        if(!match.matches()){
        lbladr.setText("Invalid address!");
        }
        else
        {
        lbladr.setText(null);
        }
    }//GEN-LAST:event_addrtxtKeyReleased

    private void depttxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_depttxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(depttxt.getText());
        if(!match.matches()){
        lbldept.setText("Invalid address!");
        }
        else
        {
        lbldept.setText(null);
        }
    }//GEN-LAST:event_depttxtKeyReleased

    private void visittimetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visittimetxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^(1|2|3|4|5|6|7|8|9|10|11|12)(am|pm|Am|Pm)$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(visittimetxt.getText());
        if(!match.matches()){
        lblvtm.setText("Invalid Time!");
        }
        else
        {
        lblvtm.setText(null);
        }
    }//GEN-LAST:event_visittimetxtKeyReleased

    private void daystxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daystxtKeyReleased
        // TODO add your handling code here:
        /*String PATTERN="^[0-9 ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(daystxt.getText());
        if(!match.matches()){
        lblday.setText("Invalid Time!");
        }
        else
        {
        lblday.setText(null);
        }*/
    }//GEN-LAST:event_daystxtKeyReleased

    private void citytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_citytxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-z ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(citytxt.getText());
        if(!match.matches()){
        lblcity.setText("Invalid City!");
        }
        else
        {
        lblcity.setText(null);
        }
    }//GEN-LAST:event_citytxtKeyReleased

    private void usernametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernametxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(usernametxt.getText());
        if(!match.matches()){
        lbluname.setText("Invalid Username!");
        }
        else
        {
        lbluname.setText(null);
        }
    }//GEN-LAST:event_usernametxtKeyReleased

    private void passwordtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordtxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]*(@)([0-9]){2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(passwordtxt.getText());
        if(!match.matches()){
        lblpass.setText("Invalid Password!");
        }
        else
        {
        lblpass.setText(null);
        }
    }//GEN-LAST:event_passwordtxtKeyReleased

    private void answertxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answertxtKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z ]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(answertxt.getText());
        if(!match.matches()){
        lblans.setText("Invalid Location!");
        }
        else
        {
        lblans.setText(null);
        }
    }//GEN-LAST:event_answertxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPortal_Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField addrtxt;
    private javax.swing.JTextField agetxt;
    private javax.swing.JTextField answertxt;
    private javax.swing.JLabel bg;
    private javax.swing.JTextField bloodgrptxt;
    private javax.swing.JTextField citytxt;
    private javax.swing.JButton clearbtn;
    private javax.swing.JTextField daystxt;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField depttxt;
    private javax.swing.JTable doctable;
    private javax.swing.JRadioButton femalerb;
    private javax.swing.JTextField fnametxt;
    private javax.swing.ButtonGroup genderbtngrp;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField joindatetxt;
    private javax.swing.JLabel lbladr;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblans;
    private javax.swing.JLabel lblbd;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lblday;
    private javax.swing.JLabel lbldept;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblpass;
    private javax.swing.JLabel lblph;
    private javax.swing.JLabel lbluname;
    private javax.swing.JLabel lblvtm;
    private javax.swing.JTextField leavedatetxt;
    private javax.swing.JTextField lnametxt;
    private javax.swing.JRadioButton malerb;
    private javax.swing.ButtonGroup maritalbtngrp;
    private javax.swing.JRadioButton marriedrb;
    private javax.swing.JRadioButton otherrb;
    private javax.swing.JTextField passwordtxt;
    private javax.swing.JTextField phtxt;
    private javax.swing.JTextField questiontxt;
    private javax.swing.JButton searchbtn;
    private javax.swing.JRadioButton singlerb;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTextField usernametxt;
    private javax.swing.JTextField visittimetxt;
    // End of variables declaration//GEN-END:variables
}
