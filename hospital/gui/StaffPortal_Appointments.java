/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.gui;
import hospital.dbutil.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class StaffPortal_Appointments extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    


    /**
     * Creates new form StaffPortal_Appointments
     */
    public StaffPortal_Appointments() {
        initComponents();
        //AutoID();
        
        try
        {
        con = DBconnection.getConnection();
        int a;
        pst =con.prepareStatement("select * from appointment");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) appttable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("appt_id"));
                v3.add(rs.getString("appt_docid"));
                v3.add(rs.getString("appt_patid"));
                v3.add(rs.getString("appt_date"));
                v3.add(rs.getString("appt_time"));
                v3.add(rs.getString("appt_desc"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        addbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        docidtxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        appttable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        desctxt = new javax.swing.JTextArea();
        timetxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        datetxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        patidtxt = new javax.swing.JTextField();
        aptidtxt = new javax.swing.JTextField();
        fnametxt = new javax.swing.JLabel();
        lnametxt = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        schtable = new javax.swing.JTable();
        searchbtn1 = new javax.swing.JButton();
        searchtxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/appt_icon.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 110, 120));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home page.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1197, 0, 60, 67));

        addbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addbtn.setForeground(new java.awt.Color(153, 0, 204));
        addbtn.setText("Set ");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel2.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 16, 90, 40));

        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(153, 0, 204));
        deletebtn.setText("Remove ");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel2.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 16, 110, 40));

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(153, 0, 204));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        jPanel2.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 16, -1, 40));

        clearbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearbtn.setForeground(new java.awt.Color(153, 0, 204));
        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        jPanel2.add(clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 10, 90, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1440, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Appointments");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));
        jPanel1.add(docidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 240, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Doctor ID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        searchbtn.setBackground(new java.awt.Color(102, 0, 255));
        searchbtn.setForeground(new java.awt.Color(204, 0, 255));
        searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 60, 40));

        appttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appt Id", "DoctorId", "Patient Id", "Date", "Time", "Description"
            }
        ));
        appttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(appttable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 770, 290));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Set Appointment Date :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add Appointment Time :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Appointment Description :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        desctxt.setColumns(20);
        desctxt.setRows(5);
        jScrollPane2.setViewportView(desctxt);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 530, 30));
        jPanel1.add(timetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, 240, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Scheduled Doctors");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 530, -1, -1));
        jPanel1.add(datetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 240, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Appt Id :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Patient Id :");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        patidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patidtxtActionPerformed(evt);
            }
        });
        jPanel1.add(patidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 160, 30));
        jPanel1.add(aptidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 330, 30));

        fnametxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fnametxt.setForeground(new java.awt.Color(255, 204, 0));
        jPanel1.add(fnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 120, 30));

        lnametxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lnametxt.setForeground(new java.awt.Color(255, 204, 0));
        jPanel1.add(lnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 130, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Dr Name : ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        schtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appt Id", "Doctor Id", "Patient Id", "Date", "Time", "Description"
            }
        ));
        schtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schtableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(schtable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 520, 750, 170));

        searchbtn1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchbtn1.setText("SEARCH");
        searchbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(searchbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 600, 90, 30));
        jPanel1.add(searchtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 600, 150, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("All Appointments :");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Appointments :");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 1450, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1440,720_bg.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StaffPortal_Homepage sph = new StaffPortal_Homepage();
        sph.show();

        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("select a.appt_id,a.appt_docid,a.appt_patid,a.appt_date,a.appt_time,a.appt_desc,d.doc_fname,d.doc_lname from appointment a ,doctor d where a.appt_docid=d.doc_id and a.appt_id=? ");
        //pst=(PreparedStatement)con.prepareStatement("select a.appt_id,a.appt_docid,a.appt_patid,a.appt_date,a.appt_time,a.appt_desc,d.doc_fname,d.doc_lname from appointment a ,doctor d where a.appt_docid=d.doc_id and d.doc_id=? ");
        //int id=Integer.parseInt(idtxt.getText());
        String aptid = aptidtxt.getText();
        //pst.setInt(1, id);
        pst.setString(1,aptid);
        ResultSet rs1=pst.executeQuery();
        if(rs1.next()==false)
        {
        JOptionPane.showMessageDialog(this,"Sorry appointment found !");
        docidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        patidtxt.setText("");
        aptidtxt.setText("");
        
        }
        else
        {
        docidtxt.setText(rs1.getString("appt_docid"));
        aptidtxt.setText(rs1.getString("appt_id"));
        patidtxt.setText(rs1.getString("appt_patid"));
        fnametxt.setText(rs1.getString("doc_fname"));
        lnametxt.setText(rs1.getString("doc_lname"));
        //datetxt.setDateFormatString(rs1.getString("appt_date").toString());
        //datetxt.setDateFormatString(rs1.getString("appt_date"));
        datetxt.setText(rs1.getString("appt_date"));
        timetxt.setText(rs1.getString("appt_time"));
        desctxt.setText(rs1.getString("appt_desc"));
        
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnActionPerformed

    /*public void AutoID()
    {
        try
        {
            Statement s = con.createStatement();
            rs = s.executeQuery("select MAX(appt_id) from appointment");
            rs.next();
            rs.getString("MAX(appt_id)");
            
            if(rs.getString("MAX(appt_id)")==null)
            {
                aptidtxt.setText("APT001");
            }
            else
            {
                long id = Long.parseLong(rs.getString("MAX(appt_id)").substring(2,rs.getString("MAX(appt_id)").length()));
                id++;
                aptidtxt.setText("APT"+String.format("%03d", id));
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }*/
    
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        try
        {
        //int id=Integer.parseInt(idtxt.getText());
        String docid=docidtxt.getText();
        String aptid=aptidtxt.getText();
        String patid=patidtxt.getText();
        String date=datetxt.getText();
        String time=timetxt.getText();
        String desc=desctxt.getText();
        
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("insert into appointment(appt_id,appt_docid,appt_patid,appt_date,appt_time,appt_desc)values(?,?,?,?,?,?)");
        pst.setString(1,aptid);
        pst.setString(2,docid);
        pst.setString(3,patid);
        pst.setString(4,date);
        pst.setString(5,time);
        pst.setString(6,desc);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"Appointment Added !");
        docidtxt.setText("");
        aptidtxt.setText("");
        patidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from appointment");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) appttable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("appt_id"));
                v3.add(rs.getString("appt_docid"));
                v3.add(rs.getString("appt_patid"));
                v3.add(rs.getString("appt_date"));
                v3.add(rs.getString("appt_time"));
                v3.add(rs.getString("appt_desc"));
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_addbtnActionPerformed

    private void appttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appttableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) appttable.getModel();
        int s = appttable.getSelectedRow();
        docidtxt.setText(df.getValueAt(s,1).toString());
        aptidtxt.setText(df.getValueAt(s,0).toString());
        patidtxt.setText(df.getValueAt(s,2).toString());
        datetxt.setText(df.getValueAt(s,3).toString());
        timetxt.setText(df.getValueAt(s,4).toString());
        desctxt.setText(df.getValueAt(s,5).toString());
        
        
        //trying for extra values
        try
        {
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("select d.doc_fname,d.doc_lname from appointment a ,doctor d where a.appt_docid=d.doc_id and d.doc_id=? ");
        //int id=Integer.parseInt(idtxt.getText());
        String id = docidtxt.getText();
        //pst.setInt(1, id);
        pst.setString(1,id);
        ResultSet rs1=pst.executeQuery();
        if(rs1.next()==false)
        {
        JOptionPane.showMessageDialog(this,"Sorry appointment found !");
        docidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        patidtxt.setText("");
        aptidtxt.setText("");
        
        }
        else{
        
        fnametxt.setText(rs1.getString("doc_fname"));
        lnametxt.setText(rs1.getString("doc_lname"));
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_appttableMouseClicked

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        
        String id = docidtxt.getText();
        con = DBconnection.getConnection();
        String sql = "delete from appointment where appt_id=? ";
        pst=(PreparedStatement)con.prepareStatement(sql);
        //pst=con.prepareStatement(sql);
        pst.setString(1,id);
        pst.execute();
        JOptionPane.showMessageDialog(null,"Appointment Deleted");
        
        
        docidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        aptidtxt.setText("");
        patidtxt.setText("");
        
        
        int a;
        pst =con.prepareStatement("select * from appointment");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) appttable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("appt_id"));
                v3.add(rs.getString("appt_docid"));
                v3.add(rs.getString("appt_patid"));
                v3.add(rs.getString("appt_date"));
                v3.add(rs.getString("appt_time"));
                v3.add(rs.getString("appt_desc"));
                
                
            }
            df.addRow(v3);
        }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void patidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patidtxtActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        docidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        patidtxt.setText("");
        aptidtxt.setText("");
    }//GEN-LAST:event_clearbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        try
        {
        String docid=docidtxt.getText();
        String date=datetxt.getText();
        String fname=fnametxt.getText();
        String lname=lnametxt.getText();
        String aptid=aptidtxt.getText();
        String time=timetxt.getText();
        String patid=patidtxt.getText();
        String desc=desctxt.getText();
        
        con = DBconnection.getConnection();
        pst=(PreparedStatement)con.prepareStatement("update appointment set appt_docid=?,appt_patid=?,appt_date=?,appt_time=?,appt_desc=? where appt_id=?");
        //pst.setInt(17,id);
        pst.setString(6,aptid);
        pst.setString(1,docid);
        pst.setString(2,patid);
        pst.setString(3,date);
        pst.setString(4,time);
        pst.setString(5,desc);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"List Updated");
        docidtxt.setText("");
        datetxt.setText("");
        timetxt.setText("");
        desctxt.setText("");
        fnametxt.setText("");
        lnametxt.setText("");
        aptidtxt.setText("");
        patidtxt.setText("");
        
        int a;
        pst =con.prepareStatement("select * from appointment");
        ResultSet rs=pst.executeQuery();
        ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
        a=rd.getColumnCount();
        DefaultTableModel df = (DefaultTableModel) appttable.getModel();
        df.setRowCount(0);
        while(rs.next())
        {
            Vector v3=new Vector();
            for(int i=1;i<=a;i++)
            {
                v3.add(rs.getString("appt_id"));
                v3.add(rs.getString("appt_docid"));
                v3.add(rs.getString("appt_patid"));
                v3.add(rs.getString("appt_date"));
                v3.add(rs.getString("appt_time"));
                v3.add(rs.getString("appt_desc"));
                
            }
            df.addRow(v3);
        }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
        
    }//GEN-LAST:event_updatebtnActionPerformed

    private void schtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schtableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_schtableMouseClicked

    private void searchbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtn1ActionPerformed
        // TODO add your handling code here:
        try
        {
            int a;
            String docid=searchtxt.getText();
            con = DBconnection.getConnection();
            pst =con.prepareStatement("select * from appointment where appt_docid=?");
            pst.setString(1,docid);
            ResultSet rs=pst.executeQuery();

            ResultSetMetaData rd = (ResultSetMetaData) rs.getMetaData();
            a=rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) schtable.getModel();
            df.setRowCount(0);
            while(rs.next())
            {
                Vector v3=new Vector();
                for(int i=1;i<=a;i++)
                {
                    v3.add(rs.getString("appt_id"));
                    v3.add(rs.getString("appt_docid"));
                    v3.add(rs.getString("appt_patid"));
                    v3.add(rs.getString("appt_date"));
                    v3.add(rs.getString("appt_time"));
                    v3.add(rs.getString("appt_desc"));
                }
                df.addRow(v3);
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"DB Error"+ex,"Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

    }//GEN-LAST:event_searchbtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPortal_Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPortal_Appointments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTable appttable;
    private javax.swing.JTextField aptidtxt;
    private javax.swing.JButton clearbtn;
    private javax.swing.JTextField datetxt;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextArea desctxt;
    private javax.swing.JTextField docidtxt;
    private javax.swing.JLabel fnametxt;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lnametxt;
    private javax.swing.JTextField patidtxt;
    private javax.swing.JTable schtable;
    private javax.swing.JButton searchbtn;
    private javax.swing.JButton searchbtn1;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField timetxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
